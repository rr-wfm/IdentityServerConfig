@page "/clients/{ClientId:int}"
@inject ConfigurationDbContext DbContext;

@if (SelectedClient == null)
{
    <p class="placeholder-glow">
        <span class="placeholder col-12"></span>
    </p>
}
else
{
    <div class="row">
        <div class="col-6">
            <TextField Entity="@SelectedClient" Property="c => c.ClientId" DisplayName="Client Id" />
            <TextField Entity="@SelectedClient" Property="c => c.ClientName" DisplayName="Client Name" />
            <TextField Entity="@SelectedClient" Property="c => c.ProtocolType" DisplayName="Protocol Type" />
            <TextAreaField Entity="@SelectedClient" Property="c => c.Description" DisplayName="Description" />
            <TextField Entity="@SelectedClient" Property="c => c.ClientUri" DisplayName="Client Uri" />
            <TextField Entity="@SelectedClient" Property="c => c.LogoUri" DisplayName="Logo Uri" />
            <div class="mb-3">
                <label class="form-label">Redirect Uri's</label>
                @foreach (var redirectUri in SelectedClient.RedirectUris ?? Enumerable.Empty<ClientRedirectUri>())
                {
                    <input type="text" readonly class="form-control-plaintext" value="@redirectUri.RedirectUri">
                }
            </div>
            <div class="mb-3">
                <label class="form-label">Post Logout Redirect Uri's</label>
                @foreach (var redirectUri in SelectedClient.PostLogoutRedirectUris ?? Enumerable.Empty<ClientPostLogoutRedirectUri>())
                {
                    <input type="text" readonly class="form-control-plaintext" value="@redirectUri.PostLogoutRedirectUri">
                }
            </div>
            <div class="mb-3">
                <label class="form-label">Allowed Grant Types</label>
                @foreach (var grantType in SelectedClient.AllowedGrantTypes ?? Enumerable.Empty<ClientGrantType>())
                {
                    <input type="text" readonly class="form-control-plaintext" value="@grantType.GrantType">
                }
            </div>
        </div>
        <div class="col-4">
            <SwitchField Entity="@SelectedClient" Property="c => c.Enabled" DisplayName="Enabled" />
            <SwitchField Entity="@SelectedClient" Property="c => c.RequireClientSecret" DisplayName="Require Client Secret" />
            <SwitchField Entity="@SelectedClient" Property="c => c.RequireConsent" DisplayName="Require Consent" />
            <SwitchField Entity="@SelectedClient" Property="c => c.AllowRememberConsent" DisplayName="Allow Remember Consent" />
            <SwitchField Entity="@SelectedClient" Property="c => c.AlwaysIncludeUserClaimsInIdToken" DisplayName="Always Include User Claims in Id Token" />
            <SwitchField Entity="@SelectedClient" Property="c => c.FrontChannelLogoutSessionRequired" DisplayName="Front Channel Logout Session Required" />
            <SwitchField Entity="@SelectedClient" Property="c => c.BackChannelLogoutSessionRequired" DisplayName="Back Channel Logout Session Required" />
            <SwitchField Entity="@SelectedClient" Property="c => c.RequirePkce" DisplayName="Require PKCE" />
            <SwitchField Entity="@SelectedClient" Property="c => c.AllowPlainTextPkce" DisplayName="Allow plain text PKCE" />
            <SwitchField Entity="@SelectedClient" Property="c => c.RequireRequestObject" DisplayName="Require Request Object" />
            <SwitchField Entity="@SelectedClient" Property="c => c.AllowAccessTokensViaBrowser" DisplayName="Allow access tokens via browser" />
            <SwitchField Entity="@SelectedClient" Property="c => c.NonEditable" DisplayName="Non-editable" />
            <div class="mb-3">
                <label class="form-label">Client Secrets</label>
                <QuickGrid Items="@SelectedClient.ClientSecrets.AsQueryable()" Class="table">
                    <PropertyColumn Property="@(s => s.Description)" />
                    <PropertyColumn Property="@(s => s.Type)" />
                    <PropertyColumn Property="@(s => s.Created)" />
                    <PropertyColumn Property="@(s => s.Expiration)" />
                </QuickGrid>
            </div>
            <div class="mb-3">
                <label class="form-label">Properties</label>
                <QuickGrid Items="@SelectedClient.Properties.AsQueryable()" Class="table table-hover table-striped">
                    <PropertyColumn Property="@(s => s.Key)" />
                    <PropertyColumn Property="@(s => s.Value)" />
                </QuickGrid>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int ClientId { get; set; }

    public Client? SelectedClient { get; private set; }

    protected async override Task OnParametersSetAsync()
    {
        SelectedClient = await DbContext.Clients.Include(c => c.RedirectUris)
                                                .Include(c => c.PostLogoutRedirectUris)
                                                .Include(c => c.AllowedGrantTypes)
                                                .Include(c => c.ClientSecrets)
                                                .Include(c => c.Properties)
                                                .FirstOrDefaultAsync(c => c.Id == ClientId);
    }
}
