@page "/scopes/{ApiScopeId:int}"
@inject ConfigurationDbContext DbContext;

@if (SelectedApiScope == null)
{
    <p class="placeholder-glow">
        <span class="placeholder col-12"></span>
    </p>
}
else
{
    <ul class="nav nav-tabs mb-3" id="apiScopeTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="general-tab" data-bs-toggle="tab" data-bs-target="#general-tab-pane" type="button" role="tab" aria-controls="general-tab-pane" aria-selected="true">General</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="properties-tab" data-bs-toggle="tab" data-bs-target="#properties-tab-pane" type="button" role="tab" aria-controls="properties-tab-pane">Properties</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="claims-tab" data-bs-toggle="tab" data-bs-target="#claims-tab-pane" type="button" role="tab" aria-controls="claims-tab-pane">Claims</button>
        </li>
    </ul>
    <div class="tab-content" id="apiScopeTabsContent">
        <div class="tab-pane fade show active" id="general-tab-pane" role="tabpanel" aria-labelledby="general-tab" tabindex="0">
            <div class="row">
                <div class="col-6">
                    <TextField Entity="@SelectedApiScope" Property="a => a.Name" DisplayName="Name" />
                    <TextField Entity="@SelectedApiScope" Property="a => a.DisplayName" DisplayName="Display Name" />
                    <TextAreaField Entity="@SelectedApiScope" Property="c => c.Description" DisplayName="Description" />
                </div>
                <div class="col-4">
                    <SwitchField Entity="@SelectedApiScope" Property="a => a.Enabled" DisplayName="Enabled" />
                    <SwitchField Entity="@SelectedApiScope" Property="a => a.ShowInDiscoveryDocument" DisplayName="Show in Discovery document" />
                    <SwitchField Entity="@SelectedApiScope" Property="a => a.Emphasize" DisplayName="Emphasize" />
                    <SwitchField Entity="@SelectedApiScope" Property="a => a.NonEditable" DisplayName="Non-editable" />
                </div>
            </div>
        </div>
        <div class="tab-pane fade show" id="properties-tab-pane" role="tabpanel" aria-labelledby="properties-tab" tabindex="2">
            <QuickGrid Items="@SelectedApiScope.Properties.AsQueryable()" Class="table table-hover table-striped">
                <PropertyColumn Property="@(s => s.Key)" />
                <PropertyColumn Property="@(s => s.Value)" />
            </QuickGrid>
        </div>
        <div class="tab-pane fade show" id="claims-tab-pane" role="tabpanel" aria-labelledby="claims-tab" tabindex="3">
            <QuickGrid Items="@SelectedApiScope.UserClaims.AsQueryable()" Class="table table-hover table-striped">
                <PropertyColumn Property="s => s.Type" />
            </QuickGrid>
        </div>
    </div>
}

@code {
    [Parameter]
    public int ApiScopeId { get; set; }

    public ApiScope? SelectedApiScope { get; private set; }

    protected async override Task OnParametersSetAsync()
    {
        SelectedApiScope = await DbContext.ApiScopes.Include(a => a.Properties)
                                                    .Include(a => a.UserClaims)
                                                    .FirstOrDefaultAsync(a => a.Id == ApiScopeId);
    }
}
