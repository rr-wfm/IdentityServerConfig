@page "/api-resources/{ApiResourceId:int}"
@attribute [Authorize(Policy = "ApiResourceView")]
@inject ConfigurationDbContext DbContext;

<PageTitle>Api Resources Details - IdentityServerConfig</PageTitle>
@if (SelectedApiResource == null)
{
    <p class="placeholder-glow">
        <span class="placeholder col-12"></span>
    </p>
}
else
{
    <EntityProvider Value="@SelectedApiResource">
        <ul class="nav nav-tabs mb-3" id="apiResourceTabs" role="tablist">
            <button class="nav-link" onclick="history.back()" style="text-decoration: none">&lt Back</button>
            <Tab TabId="general" Title="General" IsActive="true"/>
            <Tab TabId="secrets" Title="Secrets"/>
            <Tab TabId="properties" Title="Properties"/>
            <Tab TabId="scopes" Title="Scopes"/>
        </ul>
        <div class="tab-content" id="apiResourceTabsContent">
            <TabPane TabId="general" TabIndex="0" IsActive="true">
                <div class="row">
                    <div class="col-6">
                        <TextField Property="a => a.Name" DisplayName="Name"/>
                        <TextField Property="a => a.DisplayName" DisplayName="Display Name"/>
                        <TextAreaField Property="c => c.Description" DisplayName="Description"/>
                        <TextField Property="a => a.AllowedAccessTokenSigningAlgorithms" DisplayName="Allowed Access Token Signature Algorithms"/>
                    </div>
                    <div class="col-4">
                        <SwitchField Property="a => a.Enabled" DisplayName="Enabled"/>
                        <SwitchField Property="a => a.ShowInDiscoveryDocument" DisplayName="Show in Discovery document"/>
                        <SwitchField Property="a => a.RequireResourceIndicator" DisplayName="Require resource indicator"/>
                        <SwitchField Property="a => a.NonEditable" DisplayName="Non-editable"/>
                    </div>
                </div>
            </TabPane>
            <TabPane TabId="secrets" TabIndex="1">
                <QuickGrid Items="@SelectedApiResource.Secrets.AsQueryable()" Class="table table-hover table-striped" Pagination="@_paginationSecrets">
                    <PropertyColumn Property="@(s => s.Description)"/>
                    <TemplateColumn Title="Type">
                        <ChildContent Context="secret">
                            <span class="badge bg-primary">@secret.Type</span>
                        </ChildContent>
                    </TemplateColumn>
                    <PropertyColumn Property="@(s => s.Created)" Title="Created (UTC)"/>
                    <PropertyColumn Property="@(s => s.Expiration)"/>
                </QuickGrid>
                <PageSelector Pagination="_paginationSecrets"></PageSelector>
            </TabPane>
            <TabPane TabId="properties" TabIndex="2">
                <QuickGrid Items="@SelectedApiResource.Properties.AsQueryable()" Class="table table-hover table-striped" Pagination="@_paginationProperties">
                    <PropertyColumn Property="@(s => s.Key)"/>
                    <PropertyColumn Property="@(s => s.Value)"/>
                </QuickGrid>
                <PageSelector Pagination="_paginationProperties"></PageSelector>
            </TabPane>
            <TabPane TabId="scopes" TabIndex="3">
                <QuickGrid Items="@SelectedApiResource.Scopes.AsQueryable()" Class="table table-hover table-striped" Pagination="@_paginationScopes">
                    <PropertyColumn Property="s => s.Scope"/>
                </QuickGrid>
                <PageSelector Pagination="_paginationScopes"></PageSelector>
            </TabPane>
        </div>
    </EntityProvider>
}

@code {

    [Parameter]
    public int ApiResourceId { get; set; }

    private ApiResource? SelectedApiResource { get; set; }
    private readonly PaginationState _paginationSecrets = new() { ItemsPerPage = 10 };
    private readonly PaginationState _paginationScopes = new() { ItemsPerPage = 10 };
    private readonly PaginationState _paginationProperties = new() { ItemsPerPage = 10 };

    protected override async Task OnParametersSetAsync()
    {
        SelectedApiResource = await DbContext.ApiResources.Include(a => a.Secrets)
            .Include(a => a.Properties)
            .Include(a => a.Scopes)
            .FirstOrDefaultAsync(a => a.Id == ApiResourceId);
    }
}